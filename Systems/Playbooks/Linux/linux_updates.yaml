- name: Linux Updates
  hosts: linux
  tasks:
  - name: Update all packages with dnf
    ansible.builtin.dnf:
      name: "*"
      state: latest
      update_cache: true
    become: true
    when: ansible_facts['os_family'] == "RedHat"
  - name: Update all packages with apt
    ansible.builtin.apt:
      upgrade: dist
      update_cache: true
    become: true
    when: ansible_facts['os_family'] == "Debian"
  - name: Update all packages with zypper
    community.general.zypper:
      name: "*"
      state: latest
      update_cache: true
    become: true
    when: ansible_facts['os_family'] == "Suse"
  # - name: Reboot if needed
  # ansible.builtin.reboot:
  #   msg: "Reboot initiated by Ansible for Linux Updates"
  #    connect_timeout: 50
  #   reboot_timeout: 600
  #   pre_reboot_delay: 0
  #    post_reboot_delay: 30
  #    test_command: whoami
  #  become: true
  #  when: ansible_facts['os_family'] in ["RedHat", "Debian", "Suse"]
  - name: Clean up unused packages with dnf
    ansible.builtin.dnf:
      autoremove: true
    become: true
    when: ansible_facts['os_family'] == "RedHat"
  - name: Clean up unused packages with apt
    ansible.builtin.apt:
      autoremove: true
    become: true
    when: ansible_facts['os_family'] == "Debian"
  - name: Clean up unused packages with zypper
    community.general.zypper:
      name: "*"
      autoremove: true
    become: true
    when: ansible_facts['os_family'] == "Suse"